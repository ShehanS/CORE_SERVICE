# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile

application.log = "INFO"
play.modules.disabled+="play.api.mvc.CookiesModule"
play.modules.enabled+="play.api.mvc.LegacyCookiesModule"

# Session configuration
session = {

  # The cookie name
  cookieName = "PLAY_SESSION"

  # Whether the secure attribute of the cookie should be set to true
  secure = false

  # The max age to set on the cookie.
  # If null, the cookie expires when the user closes their browser.
  # An important thing to note, this only sets when the browser will discard the cookie.
  maxAge = 1 minutes

  # Whether the HTTP only attribute of the cookie should be set to true
  httpOnly = true

  # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
  # Possible values are "lax" and "strict". If misconfigured it's set to null.
  sameSite = "lax"

  # The domain to set on the session cookie
  # If null, does not set a domain on the session cookie.
  domain = null

  # The session path
  # Must start with /.
  path = ${play.http.context}

  jwt {
    # The JWT signature algorithm to use on the session cookie
    # uses 'alg' https://tools.ietf.org/html/rfc7515#section-4.1.1
    signatureAlgorithm = "HS256"

    # The time after which the session is automatically invalidated.
    # Use 'exp' https://tools.ietf.org/html/rfc7519#section-4.1.4
    expiresAfter = ${play.http.session.maxAge}

    # The amount of clock skew to accept between servers when performing date checks
    # If you have NTP or roughtime synchronizing between servers, you can enhance
    # security by tightening this value.
    clockSkew = 1 minutes

    # The claim key under which all user data is stored in the JWT.
    dataClaim = "data"
  }
}
play.http.secret.key = "naZ4FL2?:NL`N7r4Fgoa@B1IFoJAQW;@PL0]`ynPLiIn/:NEhVAq[Ciq@qrqGrOv"
play.http.secret.key = ${?APPLICATION_SECRET}
play.filters.enabled += play.filters.cors.CORSFilter
play.filters.hosts {
  allowed = ["."]
}

play.filters {
  cors {
    # allow all paths
    pathPrefixes = ["/"]
    # allow all origins
    allowedOrigins = null
    allowedHttpMethods = ["GET", "POST", "PUT", "DELETE"]
    # allow all headers
    #allowedHttpHeaders = null
  }
}

akka {

  actor {

    deployment {

      "/MasterActor" {
        dispatcher = master-actor
      }

      "/queryTopicMediatorActor" {
        dispatcher = user-manager-dispatcher
      }

      "/MasterActor/**" {
        dispatcher = blocking-work-dispatcher
      }

    }

    default-dispatcher {
      fork-join-executor {

        parallelism-min = 64

        parallelism-factor = 1.0

        parallelism-max = 128

        task-peeking-mode = LIFO
      }
    }


  }


}

master-actor {

  fork-join-executor {

    parallelism-min = 64

    parallelism-factor = 1.0

    parallelism-max = 128

    task-peeking-mode = FIFO
  }
}

blocking-work-dispatcher {
  fork-join-executor {

    parallelism-min = 64

    parallelism-factor = 1.0

    parallelism-max = 800

    task-peeking-mode = LIFO
  }
}


default.stocks = ["GOOG", "AAPL", "ORCL"]
app.mongo.server = "localhost"
app.mongo.port = "27017"
app.mongo.db = "citypack-db"
app.version = "v2"
